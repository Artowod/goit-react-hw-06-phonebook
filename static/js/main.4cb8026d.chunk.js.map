{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ListElement/ListElement.module.css","redux/actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ListElement/ListElement.jsx","components/ContactList/ContactList.jsx","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","changeFilter","createAction","addItem","removeItem","connect","state","items","contacts","dispatch","addNewContact","newContact","labelNameId","uuidv4","labelNumberId","inputNameProps","id","type","name","pattern","title","inputNumberProps","useState","setName","number","setNumber","handleInput","e","target","value","isNewContactValid","filter","item","toLowerCase","length","alert","reset","className","s","contactForm","onSubmit","preventDefault","nameBlock","htmlFor","labelName","required","onChange","numberBlock","labelNumber","filterHandler","event","filterInput","deleteHandler","deleteBtnNameAsId","delete","onClick","contactsList","filterWord","includes","map","App","itemsReducer","createReducer","actions","payload","filterReducer","_","contactsReducer","combineReducers","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","logger","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cb8026d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__1m0D4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ListElement_delete__jnopQ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\n//---------redux-------------\r\n//import {CHANGE_FILTER,ADD_ITEM,REMOVE_ITEM,FILTER_ITEMS} from './typeConstants';\r\n\r\n// export const changeFilter = (filter = '') => ({\r\n//   type: CHANGE_FILTER,\r\n//   payload: filter,\r\n// });\r\n// export const addItem = item => ({\r\n//   type: ADD_ITEM,\r\n//   payload: item,\r\n// });\r\n// export const removeItem = id => ({\r\n//   type: REMOVE_ITEM,\r\n//   payload: id,\r\n// });\r\n// export const filterItems = id => ({\r\n//   type: FILTER_ITEMS,\r\n//   payload: id,\r\n// });\r\n//---------------------------\r\n\r\n//------redux ToolKit--------\r\nexport const changeFilter = createAction('filter/changeFilter');\r\nexport const addItem = createAction('items/addItem');\r\nexport const removeItem = createAction('items/removeItem');\r\nexport const filterItems = createAction('items/filterItems');\r\n//---------------------------\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport '../../App';\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { addItem } from '../../redux/actions';\r\n\r\nconst ContactForm = ({ items, addNewContact }) => {\r\n  const labelNameId = uuidv4();\r\n  const labelNumberId = uuidv4();\r\n\r\n  const inputNameProps = {\r\n    id: labelNameId,\r\n    type: 'text',\r\n    name: 'name',\r\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n    title:\r\n      \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n  };\r\n\r\n  const inputNumberProps = {\r\n    id: labelNumberId,\r\n    type: 'tel',\r\n    name: 'number',\r\n    pattern:\r\n      '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\r\n    title:\r\n      'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +',\r\n  };\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleInput = e => {\r\n    const { value, name } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = e => {\r\n    e.preventDefault();\r\n    isNewContactValid({ id: uuidv4() });\r\n    reset();\r\n  };\r\n\r\n  const isNewContactValid = ({ id }) => {\r\n    const matchedContactsList = items.filter(item => {\r\n      return item.name.toLowerCase() === name.toLowerCase();\r\n    });\r\n    if (matchedContactsList.length !== 0) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      addNewContact({ id, name, number });\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.contactForm} onSubmit={handleFormSubmit}>\r\n      <div className={s.nameBlock}>\r\n        <label htmlFor={labelNameId} className={s.labelName}>\r\n          Name\r\n        </label>\r\n        <input\r\n          value={name}\r\n          required\r\n          {...inputNameProps}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n      <div className={s.numberBlock}>\r\n        <label htmlFor={labelNumberId} className={s.labelNumber}>\r\n          Number\r\n        </label>\r\n\r\n        <input\r\n          value={number}\r\n          required\r\n          {...inputNumberProps}\r\n          onChange={handleInput}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add contact </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  addNewContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.contacts.items,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addNewContact: newContact => dispatch(addItem(newContact)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import s from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/actions';\r\n\r\nconst Filter = ({ value, filterHandler }) => {\r\n  return (\r\n    <div>\r\n      Find contacts by name\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={filterHandler}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //state props for Filter:\r\n    value: state.contacts.filter,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //action props for Filter:\r\n    filterHandler: event => dispatch(changeFilter(event.target.value)),\r\n  };\r\n};\r\n\r\n//export default Filter;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import PropTypes from 'prop-types';\r\nimport s from './ListElement.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { removeItem } from '../../../redux/actions';\r\n\r\nconst ListElement = ({ name, number, deleteBtnNameAsId, deleteHandler }) => {\r\n  return (\r\n    <li>\r\n      {name}: {number}\r\n      <button\r\n        className={s.delete}\r\n        type=\"button\"\r\n        name={deleteBtnNameAsId}\r\n        onClick={deleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nListElement.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteBtnNameAsId: PropTypes.string.isRequired,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    //action props for Filter:\r\n    deleteHandler: event => dispatch(removeItem(event.target.name)),\r\n  };\r\n};\r\n\r\n//export default Filter;\r\nexport default connect(null, mapDispatchToProps)(ListElement);\r\n","import ListElement from './ListElement';\r\nimport { connect } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst ContactList = ({ contactsList }) => {\r\n  return (\r\n    <ul>\r\n      {contactsList.map(({ id, name, number }) => {\r\n        return (\r\n          <ListElement\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            deleteBtnNameAsId={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.array.isRequired,\r\n};\r\n\r\nconst filteredContactList = function (contacts, filterWord) {\r\n  let result = [];\r\n  result = contacts.filter(item => {\r\n    return item.name.toLowerCase().includes(filterWord.toLowerCase());\r\n  });\r\n  return result;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    //state props for Filter:\r\n    contactsList: filteredContactList(\r\n      state.contacts.items,\r\n      state.contacts.filter,\r\n    ),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(ContactList);\r\n","import ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport * as actions from './actions';\r\n//---------redux-------------\r\n//import { CHANGE_FILTER, ADD_ITEM, REMOVE_ITEM } from './typeConstants';\r\n//\r\n// const filterReducer = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n//\r\n// const itemsReducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case ADD_ITEM:\r\n//       return [...state, action.payload];\r\n//     case REMOVE_ITEM:\r\n//       return state.filter(item => item.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n//---------------------------\r\n\r\n//------redux ToolKit--------\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addItem]: (state, { payload }) => [...state, payload],\r\n  [actions.removeItem]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n//---------------------------\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n//---------redux-------------\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n//\r\n//export default rootReducer;\r\n//---------------------------\r\n\r\n//------redux ToolKit--------\r\nexport default contactsReducer;\r\n//---------------------------\r\n","//---------redux-------------\r\n//import { createStore } from 'redux';\r\n//import rootReducer from './reducers';\r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n//---------------------------\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './reducers';\r\nimport logger from 'redux-logger';\r\n\r\n//*---state structure---*/\r\n// {\r\n//   contacts: {\r\n//     items: [{ id, name, number}],\r\n//     filter: '',\r\n//   },\r\n// };\r\n//*---------------------*/\r\n\r\n//---------redux-------------\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   composeWithDevTools(),\r\n//   //  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n//---------------------------\r\n\r\n//------redux ToolKit--------\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n});\r\n//---------------------------\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1TS0_\",\"labelName\":\"ContactForm_labelName__31FMF\",\"labelNumber\":\"ContactForm_labelNumber__3dgOx\",\"nameBlock\":\"ContactForm_nameBlock__342qt\",\"numberBlock\":\"ContactForm_numberBlock__3kaNd\"};"],"sourceRoot":""}